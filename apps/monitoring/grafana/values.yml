image:
  tag: latest
imageRenderer:
  enabled: true
  networkPolicy:
    limitIngress: false
rbac:
  create: true
serviceAccount:
  create: true
datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
    - name: Mimir
      type: prometheus
      url: http://mimir-nginx/prometheus
    - name: Loki
      type: loki
      url: http://loki-gateway
sidecar:
  dashboards: 
    enabled: true
    label: grafana_dashboard
    labelValue: "1"
dashboardProviders:
  dashboardproviders.yaml:
    apiVersion: 1
    providers:
    - name: 'downloaded'
      orgId: 1
      folder: ''
      type: file
      disableDeletion: false
      editable: true
      options:
        path: /var/lib/grafana/dashboards/default
dashboards:
  downloaded:
    node-exporter:
      gnetId: 1860
      revision: 36
      datasource: Mimir
testFramework:
  enabled: false
adminPassword: admin
grafana.ini:
  server:
    root_url: http://grafana.bgalhardo.local/
  auth:
    signout_redirect_url: http://authentik.bgalhardo.local/application/o/grafana/end-session/
    oauth_auto_login: true
  auth.anonymous:
    enabled: true
  auth.generic_oauth:
    name: authentik
    enabled: true
    client_id: $__file{/etc/secrets/grafana_oidc/client_id}
    client_secret: $__file{/etc/secrets/grafana_oidc/client_secret}
    scopes: "openid profile email"
    auth_url: http://authentik.bgalhardo.local/application/o/authorize/
    token_url: http://authentik.bgalhardo.local/application/o/token/
    api_url: http://authentik.bgalhardo.local/application/o/userinfo/
    # Optionally map user groups to Grafana roles
    # role_attribute_path: contains(groups, 'Grafana Admins') && 'Admin' || contains(groups, 'Grafana Editors') && 'Editor' || 'Viewer'
plugins: ["grafana-clock-panel"]
extraSecretMounts:
- name: grafana-oidc-mount
  secretName: grafana-oidc
  defaultMode: 440
  mountPath: /etc/secrets/grafana_oidc
  readOnly: true
